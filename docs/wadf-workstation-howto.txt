=========================================================================
WADF WORKSTATION HOWTO
 - How to set up WADF on a workstation to deploy "end" applications

Tim Jackson (tim@timj.co.uk)

http://www.timj.co.uk/computing/software/wadf/
=========================================================================
Revised: 12 June 2008

This document shows how to set up WADF on a workstation to deploy "end" applications (e.g. customer applications).
For the purposes of illustration It makes a few assumptions:
- you are using PEAR to manage your dependency installation
- you have an organisational PEAR server at pear.example.com
- you have "end" applications which depend on "core" applications
- your end applications are stored in an organisational SVN server whose URL is svn+ssh://svn@svn.example.com/ with a structure of "apps/APPNAME/trunk" (for the trunk)
- your "end applications" have all their files defined using a custom PEAR role called "application", and this role is managed with a package called Example_Role_Application
- your "core applications" have all their files defined using a custom PEAR role called "applicationcore", and this role is managed with a package called Example_Role_Applicationcore

However, most of these things are configurable, so don't worry if your organisation does something a little different.

These instructions are aimed at Fedora/CentOS machines but are fairly generic

All the lines in this document that begin with "$" mean "Run this from the command line"

=======================================================
Set up local copy of PEAR
=======================================================

1. Make sure you have a global copy of PEAR installed. i.e. you should be able to run "pear" from the command line.

2. Decide on a path to your local PEAR installation (e.g. /home/[username]/pear).

Although not strictly necessary, it's best if this ends in "pear", because the pear "config-create" command assumes this.

We will call this "[pearpath]" below.

3. Do the following:
$ cd /home/[username]
$ pear config-create [pearpath, ***WITHOUT*** the trailing "pear"] .pearrc

This will create a bare PEAR config in /home/[username]/.pearrc which has
most of the PEAR paths set to [pearpath].

# Need to do this at least on Fedora 6/PEAR 1.5.0
# otherwise it is set to /var/cache/php-pear which is readonly
# see PEAR bug #11517
$ pear config-set download_dir [pearpath]/download
$ pear config-set cache_dir [pearpath]/cache

4. Now you need to set up your local PEAR installation. Install the base PEAR package:

$ pear install PEAR

Check that PEAR got installed:

$ pear list
Installed packages, channel pear.php.net:
=========================================
Package          Version State
Archive_Tar      1.3.2   stable
Console_Getopt   1.2.3   stable
PEAR             1.7.1   stable
Structures_Graph 1.0.2   stable

5. Edit /home/[username]/.bash_profile.

a) Edit the line which says PATH=[stuff] and change it to:

PATH=[pearpath]:[stuff]

b) Add to the end :

export PHPRC=/home/[username]

This means that when you run "php" from the command line, it will read the
config file /home/[username]/php-cli.ini
This isn't necessary for PEAR, but is for things that depend on libraries
installed using the PEAR installer and included via require().

6. Fully log out of your desktop/SSH session and log back in (this makes all the aliasing and stuff kick in)

=======================================================
PEAR 1.7.x setup
=======================================================

1. Make sure you have PEAR 1.7.1+ (WADF needs it, and also 1.6.2+ fixes bug #11642).

2. PEAR 1.7.0+ has some new config options, cfg_dir and www_dir. Set these:

pear config-set cfg_dir [pearpath]/cfg
pear config-set www_dir [pearpath]/www

=======================================================
PEAR setup for your organisation
=======================================================

1. Discover your organisation's PEAR channel:

$ pear channel-discover pear.example.com

The rest of this document assumes that the "short name" for this channel is "example". Change as appropriate.

2. Log in to the organisational channel if it needs it:

$ pear -d default_channel=pear.example.com login

3. Finally install the base "application" and "core application" roles:

$ pear install example/Example_Role_Application example/Example_Role_Applicationcore

=======================================================
WADF setup
=======================================================
1. Discover Tim Jackson's PEAR channel

$ pear channel-discover pear.timj.co.uk

2. Install WADF

$ pear install timj/Tools_WADF-beta

3. Create a directory for WADF to put stuff in:

mkdir ~/.wadf

4. Create a file called ~/.wadf/config containing the following:

[local]
; the SVN path to applications we are going to deploy
vc_base = svn+ssh://svn@svn.example.com/apps

; Uncomment if you wish to use the shared (in your account) installed
; version of PEAR. In general you shouldn't, and allow WADF to install
; a clean copy in each client site.
;dep_pear_deploy_path = 

dep_pear_preferred_stability = beta

dep_pear_base_channel = username:password@pear.example.com
dep_pear_base_roles = example/Example_Role_Application example/Example_Role_Applicationcore

5. Run "wadf-httpd start". This will create an initial Apache config in ~/.wadf/httpd.conf. It will also create ~/.wadf/vhosts which is where deployed vhost files will be put.

6. Configure the ServerAdmin option in ~/.wadf/httpd.conf - set it to go to YOUR personal e-mail address

7. Finally, make sure that the system administrator has enabled permissions for your user to write to /etc/hosts.

=======================================================
MySQL setup
=======================================================
1. Check you have a local MySQL server running (ask your system administrator) and get the root password.

2. If using Fedora 6 or less, log into MySQL as root and do:

USE mysql;
DELETE FROM user WHERE user='';
FLUSH PRIVILEGES;

=======================================================
Deploying a client application
=======================================================
1. Set up PEAR to use beta versions of packages where available, assuming this is what you want to do (probably is on a dev machine)

$ pear config-set preferred_state beta
$ pear config-set -c pear preferred_state beta

2. Deploy the app:

$ wadf-deploy [appname]

where "appname" is the appname in version control, e.g. "client-system"

Choose "y" to redeploy the database if this is the first time round.

3. If the app is set up properly, it should be up and running! Somewhere in the middle of the output you just saw, you should have seen something 

------------------
WADF HTTPD instance is running (pid XXXX)
Configured for the following applications:
 APPID: (/path/to/working-copy)
   http://APPID.localhost.localdomain:10080
------------------

The Apache HTTPD error logs will be in ~/.wadf/httpd.error_log if you need them.

When it's deployed you may (or may not) need to run one or more command line scripts (e.g. setup.php, cmdline/index_dispatchers or similar) manually.

4. Read [pearpath]/docs/Tools_WADF/wadf.txt.

You may or may not need to set up per-INSTANCE settings (e.g. override include paths) in .wadf-instance. After making changes to template files in the app, run "wadf-reprocess".
